// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cilium/cilium_bpf_metadata.proto

package cilium

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_api_v2_core2 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BpfMetadata struct {
	// File system root for bpf. Defaults to "/sys/fs/bpf" if left empty.
	BpfRoot string `protobuf:"bytes,1,opt,name=bpf_root,json=bpfRoot" json:"bpf_root,omitempty"`
	// 'true' if the filter is on ingress proxy, 'false' for egress proxy.
	IsIngress bool `protobuf:"varint,2,opt,name=is_ingress,json=isIngress" json:"is_ingress,omitempty"`
	// Cilium security identity for which this proxy is confugured.
	Identity uint32 `protobuf:"varint,3,opt,name=identity" json:"identity,omitempty"`
	// gRPC API config source for network policy
	ApiConfigSource *envoy_api_v2_core2.ApiConfigSource `protobuf:"bytes,4,opt,name=api_config_source,json=apiConfigSource" json:"api_config_source,omitempty"`
}

func (m *BpfMetadata) Reset()                    { *m = BpfMetadata{} }
func (m *BpfMetadata) String() string            { return proto.CompactTextString(m) }
func (*BpfMetadata) ProtoMessage()               {}
func (*BpfMetadata) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BpfMetadata) GetBpfRoot() string {
	if m != nil {
		return m.BpfRoot
	}
	return ""
}

func (m *BpfMetadata) GetIsIngress() bool {
	if m != nil {
		return m.IsIngress
	}
	return false
}

func (m *BpfMetadata) GetIdentity() uint32 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *BpfMetadata) GetApiConfigSource() *envoy_api_v2_core2.ApiConfigSource {
	if m != nil {
		return m.ApiConfigSource
	}
	return nil
}

func init() {
	proto.RegisterType((*BpfMetadata)(nil), "cilium.BpfMetadata")
}

func init() { proto.RegisterFile("cilium/cilium_bpf_metadata.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x45, 0x89, 0x4a, 0x9d, 0xa6, 0x88, 0x98, 0xd5, 0x58, 0x10, 0x42, 0x41, 0x98, 0x55, 0x02,
	0xe3, 0x17, 0x58, 0x57, 0x2e, 0x74, 0x11, 0x77, 0x6e, 0x42, 0x66, 0x9a, 0x29, 0x0f, 0xec, 0xbc,
	0x47, 0x92, 0x0e, 0xf4, 0xbb, 0xfc, 0x41, 0x69, 0x52, 0x84, 0x59, 0x85, 0xdc, 0x77, 0xb8, 0x9c,
	0xcb, 0x65, 0x0f, 0x3f, 0x70, 0x3c, 0xe8, 0xf2, 0xd8, 0x8e, 0x06, 0x7b, 0xf0, 0xc9, 0xed, 0x5c,
	0x72, 0x8a, 0x02, 0x26, 0x14, 0x8b, 0x72, 0x5a, 0x3f, 0xfb, 0x71, 0xc2, 0x93, 0x76, 0x04, 0x7a,
	0x6a, 0x75, 0x8f, 0xc1, 0xeb, 0x1e, 0xc7, 0x01, 0xf6, 0x36, 0xe2, 0x31, 0xf4, 0xbe, 0xe0, 0x9b,
	0x5f, 0xc6, 0x57, 0x5b, 0x1a, 0x3e, 0x2e, 0x25, 0xe2, 0x91, 0x57, 0xe7, 0xd2, 0x80, 0x98, 0x6a,
	0x26, 0x59, 0xb3, 0x34, 0xb7, 0x1d, 0x0d, 0x06, 0x31, 0x89, 0x27, 0xce, 0x21, 0x5a, 0x18, 0xf7,
	0xc1, 0xc7, 0x58, 0x5f, 0x49, 0xd6, 0x54, 0x66, 0x09, 0xf1, 0xbd, 0x04, 0x62, 0xcd, 0x2b, 0xd8,
	0xf9, 0x31, 0x41, 0x3a, 0xd5, 0xd7, 0x92, 0x35, 0x77, 0xe6, 0xff, 0x2f, 0x3e, 0xf9, 0x83, 0x23,
	0xb0, 0x33, 0x81, 0xfa, 0x46, 0xb2, 0x66, 0xd5, 0x6e, 0x54, 0x16, 0x55, 0x8e, 0x40, 0x4d, 0xad,
	0x3a, 0x8b, 0xaa, 0x57, 0x82, 0xb7, 0x8c, 0x7e, 0x65, 0xd2, 0xdc, 0xbb, 0x79, 0xb0, 0xad, 0xbe,
	0x2f, 0x33, 0xbb, 0x45, 0x9e, 0xf1, 0xf2, 0x17, 0x00, 0x00, 0xff, 0xff, 0x73, 0xad, 0x64, 0x6d,
	0x19, 0x01, 0x00, 0x00,
}
